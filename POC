{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "# Ambar Nails \u2014 Fast Prompting POC\n",
        "Este notebook muestra una prueba de concepto (POC) para aplicar t\u00e9cnicas de Fast Prompting en la generaci\u00f3n de contenido de productos."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [],
      "source": [
        "import openai\n",
        "import pandas as pd\n",
        "\n",
        "# Configurar tu API Key\n",
        "openai.api_key = \"TU_API_KEY\"\n",
        "\n",
        "# Dataset de ejemplo\n",
        "productos = pd.DataFrame([\n",
        "    {\"nombre\": \"Esmalte Nude Elegance\", \"categoria\": \"Esmalte\", \"beneficios\": \"Duraci\u00f3n 3 semanas, brillo intenso\"},\n",
        "    {\"nombre\": \"Kit Semipermanente Pro\", \"categoria\": \"Kit\", \"beneficios\": \"Incluye l\u00e1mpara, esmalte y top coat\"}\n",
        "])\n",
        "productos"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [],
      "source": [
        "# Prompt estilo Fast Prompting\n",
        "for _, row in productos.iterrows():\n",
        "    prompt = f\"Escribe una descripci\u00f3n breve (40-60 palabras) para {row['nombre']}. Incluye beneficios: {row['beneficios']}. Tono elegante y cercano.\"\n",
        "    response = openai.ChatCompletion.create(\n",
        "        model=\"gpt-4o-mini\",\n",
        "        messages=[{\"role\":\"user\",\"content\":prompt}],\n",
        "        max_tokens=120\n",
        "    )\n",
        "    print(row[\"nombre\"], \"\u2192\", response[\"choices\"][0][\"message\"][\"content\"])"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "name": "python",
      "version": "3.x"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}
